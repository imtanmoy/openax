name: Release

on:
  push:
    tags:
      - "v*"

env:
  GO_VERSION: "1.23"

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug package contents before publish
        run: |
          echo "=== Package.json files array ==="
          cat package.json | grep -A5 '"files"'
          echo "=== npm pack dry run ==="
          npm pack --dry-run
          echo "=== Directory contents ==="
          ls -la bin/

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
